#!/usr/bin/env node
// vi:syntax=javascript

'use strict';

var TEMPLATE = '### [<%= base.name %>](<%= base.link %>)\n' +
    '<% endpoints.forEach(function(endpoint) { %>\n' +
    '* [<%= endpoint.name %>](<%= endpoint.link %>)(' +
    '<% endpoint.params.forEach(function(param, i) { %>' +
    '<% if (i) { %>, <% } %>' +
    '<%= param.name %><% }); %>)<% }); %>\n';

var fs = require('fs'),
    dox = require('dox');

var find = require('lodash-node/modern/collections/find'),
    where = require('lodash-node/modern/collections/where'),
    map = require('lodash-node/modern/collections/map'),
    curry = require('lodash-node/modern/functions/curry'),
    template = require('lodash-node/modern/utilities/template');

/**
 * @function tag
 * @param {String} type tag type
 * @param {Object} doc single index from dox.parseComments
 * @return {*}
 */
function tag(type, doc) {
    return (find(doc.tags, { type: type }) || {}).string;
}

/**
 * @function tags
 * @param {String} type tag type
 * @param {Object} doc single index from dox.parseComments
 * @return {Array}
 */
function tags(type, doc) {
    return where(doc.tags, { type: type });
}

/**
 * documents a client file
 * @function client
 * @param {String} file
 * @return {String} makedown representation of client yuidoc documentations
 */
var client = module.exports = function client(file) {
    var comments = dox.parseComments(fs.readFileSync(file).toString()),
        base = find(comments, { isConstructor: true }),
        endpoints = where(comments, curry(tag)('method'));

    return template(TEMPLATE, {
        base:  {
            name: tag('class', base),
            link: tag('link', base),
        },
        endpoints: map(endpoints, function (endpoint) {
            return {
                name: tag('method', endpoint),
                link: tag('link', endpoint),
                params: tags('param', endpoint),
            };
        })
    });
}

if (!module.parent) {
    var join = require('path').join,
        clients_dir = process.argv[2];

    if (!clients_dir) {
        console.log('a clients directory is required');
        process.exit(1);
    } else {
        fs.readdirSync(clients_dir).forEach(function (file) {
            console.log(client(join(clients_dir, file)));
        });
    }
}
